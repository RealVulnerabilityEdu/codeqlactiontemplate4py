# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: 'Secure Programming Learning@RealVulnerabilityEdu'

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions: read-all

jobs:
  check:
    # check existence of source code; other CodeQL would fail, which is not good for
    # the learning experience we design because it can confuse the learners.
    name: Check if Python code exists
    runs-on: ubuntu-latest
    outputs:
      description: 'Check if Python code exists'
      files-exist: ${{ steps.check-code-existence.outputs.FILES_EXIST }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: check-code-existence
        name: Check if Python code exists
        shell: bash
        run: |
          n_files=$(find . -type f -name "*.py" | wc -l)
          echo "Number of Python files: $n_files"
          if [ "${n_files}" -eq 0 ]; then
            echo "FILES_EXIST=no" >> "${GITHUB_OUTPUT}"
            echo "No Python code found. Commit it to your repository if you have Python code. Happy learning!"
          else
            echo "FILES_EXIST=yes" >> "${GITHUB_OUTPUT}"
            echo "Python code found. Let's analyze it!"
          fi
  analyze:
    name: Analyze (${{ matrix.language }})
    needs: check
    if: needs.check.outputs.files-exist == 'yes'
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on:
      ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

      # create issues
      issues: write

    strategy:
      fail-fast: false
      matrix:
        include:
          # - language: c-cpp
          #   build-mode: autobuild
          - language: python
            build-mode: none
        # - language: java-kotlin
        #  build-mode: autobuild
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # If the analyze step fails for one of the languages you are analyzing with
      # "We were unable to automatically build your code", modify the matrix above
      # to set the build mode to "manual" for that language. Then modify this step
      # to build your code.
      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'If you are using a "manual" build mode for one or more of the' \
            'languages you are analyzing, replace this with the commands to build' \
            'your code, for example:'
          echo '  make bootstrap'
          echo '  make release'
          exit 1

      - name: Perform CodeQL Analysis
        id: codeql_analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'
          upload: 'never'
          output: '${{github.workspace}}/sarif_results'

      - name: Displaying repository and snapshot
        id: check_variables
        run: |
          echo "GitHub repository: ${{github.repository}}"
          echo "GitHub repository commit sha: ${{github.sha}}"

      - id: sarif-to-issues
        name: Create secure programming learning issues
        uses: RealVulnerabilityEdu/GhIssuesFromSarifAction/sariftoghissues@v0.007.alpha
        with:
          toolkit-version: 'v0.003.alpha'
          sarif-data-path: '${{github.workspace}}/sarif_results'
          issue-data-path: '_s2ghi_/issue_data'
          issue-body-template: 'https://realvulnerabilityedu.github.io/download/software/release/ghissues/issue_body_template.md'
          repository: '${{github.repository}}'
          sha: '${{github.sha}}'
        env:
          GH_TOKEN: '${{secrets.GITHUB_TOKEN}}'
